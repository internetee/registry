= render 'shared/title', name: t(:contacts)

.row
  .col-md-12
    = search_form_for [:admin, @q], html: { style: 'margin-bottom: 0;', class: 'js-form', autocomplete: 'off' } do |f|
      .row
        .col-md-3
          .form-group
            = f.label :name
            = f.search_field :name_matches, value: params[:q][:name_matches], class: 'form-control', placeholder: t(:name)
        .col-md-3
          .form-group
            = f.label t(:id)
            = f.search_field :code_eq, class: 'form-control', placeholder: t(:id)
        .col-md-3
          .form-group
            = f.label t(:ident)
            = f.search_field :ident_matches, class: 'form-control', placeholder: t(:ident)
        .col-md-3
          .form-group
            = label_tag t(:ident_type)
            = select_tag '[q][ident_type_eq]', options_for_select(Contact::IDENT_TYPES, params[:q][:ident_type_eq]), { include_blank: true, placeholder: t(:choose), class: 'form-control selectize' }
      .row
        .col-md-3
          .form-group
            = f.label t(:email)
            = f.search_field :email_matches, class: 'form-control', placeholder: t(:email)
        .col-md-3
          .form-group
            = label_tag t(:country)
            = select_tag '[q][country_code_eq]', SortedCountry.all_options(params[:q][:country_code_eq]), { include_blank: true, placeholder: t(:choose), class: 'form-control selectize' }
        .col-md-3
          .form-group
            = f.label t(:is_registrant)
            %div
              = f.check_box :registrant_domains_id_not_null
        .col-md-3
          .form-group
            = label_tag t(:contact_type)
            = select_tag '[q][domain_contacts_type_in]', options_for_select([['admin', 'AdminDomainContact'], ['tech', 'TechDomainContact']], params[:q][:domain_contacts_type_in]), { multiple: true, placeholder: t(:choose), class: 'form-control js-combobox' }
      .row
        .col-md-3
          .form-group
            = f.label t(:registrar)
            = f.select :registrar_id_eq, Registrar.all.map { |x| [x, x.id] }, { include_blank: true }, class: 'form-control selectize', placeholder: t(:choose)
        .col-md-3
          .form-group
            = f.label t(:created_at_from)
            = f.search_field :created_at_gteq, value: params[:q][:created_at_gteq], class: 'form-control datepicker', placeholder: t(:created_at_from)
        .col-md-3
          .form-group
            = f.label t(:created_at_until)
            = f.search_field :created_at_lteq, value: params[:q][:created_at_lteq], class: 'form-control datepicker', placeholder: t(:created_at_until)
        .col-md-3
          .form-group
            = f.label t(:updated_at)
            = f.search_field :updated_at_gteq, value: params[:q][:updated_at_gteq], class: 'form-control datepicker', placeholder: t(:updated_at)
      .row
        .col-md-6
          .form-group
            = label_tag t(:status)
            = select_tag :statuses_contains, options_for_select(Contact::STATUSES, params[:statuses_contains]), { multiple: true, placeholder: t(:choose), class: 'form-control js-combobox' }
        .col-md-3
          .form-group
            = label_tag t(:results_per_page)
            = text_field_tag :results_per_page, params[:results_per_page], class: 'form-control', placeholder: t(:results_per_page)
        .col-md-3{style: 'padding-top: 25px;'}
          %button.btn.btn-primary
            &nbsp;
            %span.glyphicon.glyphicon-search
            &nbsp;
          %button.btn.btn-default.js-reset-form
            = t(:clear_fields)
%hr
.row
  .col-md-12
    .table-responsive
      %table.table.table-hover.table-bordered.table-condensed
        %thead
          %tr
            %th{class: 'col-xs-2'}
              = sort_link(@q, 'name', t(:name))
            %th{class: 'col-xs-2'}
              = sort_link(@q, 'code', t(:id))
            %th{class: 'col-xs-2'}
              = sort_link(@q, 'ident', t(:ident))
            %th{class: 'col-xs-2'}
              = sort_link(@q, 'email', t(:created_at))
            %th{class: 'col-xs-2'}
              = sort_link(@q, 'registrar_name', t(:registrar))
        %tbody
          - @contacts.each do |contact|
            %tr
              %td= link_to(contact, admin_contact_path(contact))
              %td= contact.code
              %td= ident_for(contact)
              %td= l(contact.created_at, format: :short)
              %td
                - if contact.registrar
                  = link_to(contact.registrar, admin_registrar_path(contact.registrar))

.row
  .col-md-6
    = paginate @contacts
  .col-md-6.text-right
    .pagination
      = t(:result_count, count: @contacts.total_count)

:coffee
  $(".js-reset-form").on "click", (e) ->
    e.preventDefault();
    window.location = "#{admin_contacts_path}"
