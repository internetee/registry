#js-domain-contacts
  - @domain_params['contacts_attributes'].each do |k, v|
    .js-contact
      .panel.panel-default
        .panel-heading.clearfix
          .pull-left= t(:contact)
          .pull-right
            = link_to(t(:add_another), '#', class: 'btn btn-default btn-xs add-domain-contact')
            = link_to(t(:delete), '#', class: 'btn btn-default btn-xs destroy')
        .panel-body
          .form-group
            .col-md-3.control-label
              = label_tag "domain_contacts_attributes_#{k}_type", t(:contact_type), class: 'required'
            .col-md-7
              = select_tag "domain[contacts_attributes][#{k}][type]", options_for_select(['admin', 'tech'], v['type']), {class: 'form-control js-contact-type'}

          .form-group
            .col-md-3.control-label
              = label_tag "domain_contacts_attributes_#{k}_code", t(:id), class: 'required'
            .col-md-7.has-feedback
              = text_field_tag "domain[contacts_attributes][#{k}][code]", v['code'], class: "hidden"
              = text_field_tag "domain[contacts_attributes][#{k}][code_helper]", contacts.find_by(code: v['code']).try(:search_name), class: 'form-control',  data: {autocomplete: search_contacts_registrar_domains_path}, required: true

:coffee
  load_listener = ->
    clone = $('.js-contact:first').clone()
    $("#js-domain-contacts").nestedAttributes
      bindAddTo: $(".add-domain-contact")
      afterAdd: (item) ->
        # preselect type
        item.find('select.js-contact-type').each (k, v) ->
          $(v).val($(v).find('option:last-child').val())
        # add combobex
        item.find('select.js-contact-code').each (k, v) ->
          $(v).select2
            width: "100%"
            selectOnBlur: true
            dropdownAutoWidth: if self==top then true else false
        # remove link for temp
        item.find('a.add-domain-contact').each (k, v) ->
          $(v).hide()
        new Autocomplete()
      $clone: clone
  window.addEventListener 'load', load_listener
